services: 
  nginx:
    image: nginx:stable
    container_name: nginx
    restart: unless-stopped
    tty: true
    ports:
        - "80:80"
    volumes: 
        - ./src:/var/www/app
        - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on: 
        - php
        - mysql
    networks: 
        - hospitaltc2

  mysql:
    platform: linux/amd64
    image: mysql:lts
    container_name: mysql
    restart: unless-stopped
    tty: true
    ports: 
        - "${MYSQL_HOST_PORT}:${MYSQL_DOCKER_CONTAINER_PORT}"
    volumes: 
        - mysql-data:/var/lib/mysql
    environment: 
        MYSQL_DATABASE: ${DATABASE_NAME}
        MYSQL_USER: ${MYSQL_USER}
        MYSQL_PASSWORD: ${MYSQL_PASSWORD}
        MYSQL_ROOT_PASSWORD: root
        SERVICE_TAGS: dev
        SERVICE_NAME: mysql
    networks: 
        - hospitaltc2

  php:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: php
    restart: unless-stopped
    tty: true
    working_dir: /var/www/app
    volumes: 
      - ./src:/var/www/app
    ports: 
      - "8000:8000"
    networks: 
      - hospitaltc2

networks:
  hospitaltc2:
    driver: bridge

volumes:
  mysql-data: